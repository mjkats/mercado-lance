name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy_main:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'
          java-package: jdk
          architecture: x64

      - name: Build with Maven
        run: mvn clean install -DskipTests=true

      - name: Run tests
        run: mvn test

      - name: Publish artifact
        run: |
          mkdir -p ./build
          cp target/*.jar ./build

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Package application
        run: |
          zip -r mercado-lance.zip ./build/*.jar

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version --application-name "Mercado Lance Service" --version-label v${{ github.sha }} --source-bundle S3Bucket="elasticbeanstalk-us-east-1-337152444350",S3Key="mercado-lance-v${{ github.sha }}.zip"
          aws elasticbeanstalk update-environment --application-name "Mercado Lance Service" --environment-name MercadoLanceService-env --version-label v${{ github.sha }}

  build_develop:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'
          java-package: jdk
          architecture: x64

      - name: Build with Maven
        run: mvn clean install -DskipTests=true

      - name: Run tests
        run: mvn test